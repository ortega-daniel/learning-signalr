@page "/client"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager navigationManager
@implements IAsyncDisposable

<h1>Blazor WebAssembly Client</h1>
<div class="row" style="padding-top: 50px;">
    <div class="col-md-4">
        <div class="control-group">
            <div>
                <label for="broadcastMsg">Message</label>
                <input @bind="message" type="text" id="broadcastMsg" name="broadcastMsg" />
            </div>
            <button class="btn btn-primary" @onclick="BroadcastMessage" disabled="@(!isConnected)">Broadcast</button>
        </div>
    </div>
    <div class="col-md-7">
        <p>SignalR Messages:</p>
        <pre>
            @foreach (var message in messages)
           {
               @message<br />
           }
        </pre>
    </div>
</div>

@code {
    private HubConnection? hubConnection;
    private List<String> messages = new();
    private string? message;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(navigationManager.ToAbsoluteUri("learningHub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string>("ReceiveMessage", message =>
        {
            messages.Add(message);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task BroadcastMessage()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("BroadcastMessage", message);
        }
    }

    public bool isConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}